{"version":3,"sources":["components/layout/Header.js","context.js","components/pages/About.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","branding","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","c","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","About","Contact","showContactInfo","onShowClick","onDeleteClick","delete","_this2","name","onClick","style","cursor","float","bind","color","marginRight","email","phone","Contacts","deleteContact","contactsCp","Fragment","contacts_Contact","deleteClickHandler","TextInputGroup","htmlFor","label","classnames","is-invalid","error","placeholder","onChange","AddContact","errors","event","defineProperty","target","onSubmit","newContact","preventDefault","abrupt","post","history","push","layout_TextInputGroup","EditContact","updateContact","put","match","params","then","resp","_this3","NotFound","App","context_Provider","basename","process","BrowserRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.69a8bbb2.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\nconst Header =(props)=> {\n  return (\n    <nav className='navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0'>\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          { props.branding }\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\"\n                  className=\"nav-link\">\n                <i className=\"fa fa-home\"/> &nbsp;\n                Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\"\n                  className=\"nav-link\">\n                <i className=\"fas fa-address-card\"/> &nbsp;\n                Add</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\"\n                  className=\"nav-link\">\n                <i className=\"fa fa-question\"/> &nbsp;\n                About</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding: 'My Contacts'\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\nexport default Header","import React, {Component} from 'react'\nimport axios from 'axios'\n\nconst Context = React.createContext()\nconst reducer =(state, action)=> {\n  switch(action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact=> contact.id !== action.payload)\n      }\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [\n          action.payload,\n          ...state.contacts\n        ]\n      }\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(c=> c.id === action.payload.id ? (c = action.payload) : c)\n      }\n    default:\n      return state\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: (action)=> this.setState(state=> reducer(state, action))\n  }\n\n  async componentDidMount() {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n    this.setState({ contacts: response.data })\n  }\n\n  render() {\n    return (\n      <Context.Provider value={ this.state }>\n        { this.props.children }\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer","import React from 'react'\n\nexport default (props)=> {\n  return (\n    <div>\n      <h1 className=\"display-4\">About</h1>\n      <p className=\"lead\">App to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0</p>\n    </div>\n  )\n}","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {Consumer} from  '../../context'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport About from '../pages/About'\n\nclass Contact extends Component {\n\n  state = {\n    showContactInfo: false\n  }\n\n\n  onShowClick =()=> {\n    this.setState({ showContactInfo: !this.state.showContactInfo })\n  }\n\n  onDeleteClick = async (id, dispatch)=> {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n\n    dispatch({ type: 'DELETE_CONTACT', payload: id })\n  }\n\n  render() {\n    const { contact } = this.props\n\n    return (\n      <Consumer>\n      {(value)=> {\n          return (\n            <div className='card bg-light card-body mb-3'>\n              <h4 className=\"card-title\">{ contact.name }{' '}\n                <i className=\"fa fa-angle-down\"\n                    onClick={ this.onShowClick }\n                      style={ {cursor: 'pointer'} } />\n                <i className=\"fas fa-minus\"\n                    style={ {cursor: 'pointer', float: 'right'} }\n                      onClick={ this.onDeleteClick.bind(this, contact.id, value.dispatch) }  />\n                <Link to={ `contact/edit/${contact.id}` }>\n                  <i className=\"fas fa-user-edit\"\n                  style={ {\n                    cursor: 'pointer',\n                    float: 'right',\n                    color: 'black',\n                    marginRight: '1rem'\n                  } }  />\n                </Link>\n              </h4>\n              { this.state.showContactInfo ? (\n                  <ul className='list-group'>\n                    <li className='list-group-item'><i className=\"fas fa-envelope-open\"/> { contact.email }</li>\n                    <li className='list-group-item'><i className=\"fas fa-phone\"/> { contact.phone }</li>\n                  </ul>\n              ) : null }\n            </div>\n          )\n        }\n      }\n      </Consumer>\n\n\n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n}\n\nexport default Contact","import React, {Component} from 'react'\nimport Contact from './Contact'\nimport { Consumer } from '../../context'\n\nclass Contacts extends Component {\n\n   deleteContact =(id)=> {\n     const contactsCp = this.state.contacts.filter((contact)=> contact.id !== id)\n\n     this.setState({ contacts: contactsCp })\n   }\n\n  render() {\n\n    return (\n      <Consumer>\n        {(value)=> {\n          return (\n          <>\n          <h3 className=\"display-4 mb-2\">\n            Contact List\n          </h3>\n            { value.contacts.map((contact)=> (\n                <Contact\n                    key={ contact.id }\n                    contact={ contact }\n                    deleteClickHandler={ this.deleteContact.bind(this, contact.id) } />\n              ))\n            }\n          </>\n          )\n        }}\n      </Consumer>\n    )\n  }\n\n}\n\nexport default Contacts","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from  'classnames'\n\nconst TextInputGroup =(props)=> {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={ props.name } className=\"card-title\">{ props.label }</label>\n      <input\n        type={ props.type }\n          className={\n            classnames('form-control form-control-lg',\n                        { 'is-invalid': props.error })\n            }\n            placeholder={ props.placeholder }\n              name={ props.name }\n                value={ props.value }\n                  onChange={ props.onChange }  />\n      {props.error &&\n        <div className=\"invalid-feedback\">\n          { props.error }\n        </div>\n      }\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n  name:        PropTypes.string.isRequired,\n  value:       PropTypes.string.isRequired,\n  label:       PropTypes.string.isRequired,\n  type:        PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange:    PropTypes.func.isRequired,\n  error:       PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup","import React, {Component} from 'react'\nimport {Consumer} from  '../../context'\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\nclass AddContact extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {\n\n    }\n  }\n\n  onChange =(event)=> this.setState({\n    [event.target.name]: event.target.value\n   })\n\n  onSubmit = async (dispatch, event)=> {\n    event.preventDefault()\n\n    if (this.state.name === '') {\n      this.setState({ errors: {name: 'Name is required.'} })\n      return\n    }\n\n    if (this.state.email === '') {\n      this.setState({ errors: {email: 'Email is required.'} })\n      return\n    }\n\n    if (this.state.phone === '') {\n      this.setState({ errors: {phone: 'Phone is required.'} })\n      return\n    }\n\n    const newContact = {\n      name:  this.state.name,\n      email: this.state.email,\n      phone: this.state.phone\n    }\n\n    const response = axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n\n    dispatch({ type: 'ADD_CONTACT', payload: response.data })\n\n    // Clear input form\n    this.setState({\n       name:  '',\n       email: '',\n       phone: '',\n       errors: {}\n    })\n\n    this.props.history.push('/')\n\n  }\n  render() {\n\n    return (\n      <Consumer>\n      {(value)=> {\n        return (\n          <div className='card bg-light mb-3'>\n            <div className='card-header'><h4 className=\"card-title\">Add Contact</h4></div>\n            <div className=\"card-body\">\n              <form onSubmit={ this.onSubmit.bind(this, value.dispatch) }>\n                <TextInputGroup\n                  label=\"Name\"\n                    name=\"name\"\n                      placeholder=\"Enter name...\"\n                        value={ this.state.name }\n                          onChange={ this.onChange }\n                            error={ this.state.errors.name } />\n                <TextInputGroup\n                  label=\"Email\"\n                    name=\"email\"\n                      placeholder=\"Enter email...\"\n                        type=\"email\"\n                          value={ this.state.email }\n                            onChange={ this.onChange }\n                            error={ this.state.errors.email } />\n                <TextInputGroup\n                  label=\"Phone\"\n                    name=\"phone\"\n                      type=\"text\"\n                        placeholder=\"Enter phone...\"\n                          value={ this.state.phone }\n                            onChange={ this.onChange }\n                            error={ this.state.errors.phone } />\n                <input\n                  type=\"submit\"\n                    value='Add'\n                      className='btn btn-primary btn-lg btn-block'/>\n              </form>\n            </div>\n          </div>\n        )\n      }}\n    </Consumer>\n    )\n  }\n\n}\n\nexport default AddContact","import React, {Component} from 'react'\nimport {Consumer} from  '../../context'\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\n\nclass EditContact extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {\n\n    }\n  }\n\n  componentDidMount() {\n    axios\n      .get(`https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`)\n        .then(resp=> {\n          const contact = resp.data\n\n          this.setState({\n            name:   contact.name,\n            email:  contact.email,\n            phone:  contact.phone\n           })\n        })\n  }\n\n  onChange =(event)=> this.setState({\n    [event.target.name]: event.target.value\n   })\n\n  onSubmit = async (dispatch, event)=> {\n    event.preventDefault()\n\n    if (this.state.name === '') {\n      this.setState({ errors: {name: 'Name is required.'} })\n      return\n    }\n\n    if (this.state.email === '') {\n      this.setState({ errors: {email: 'Email is required.'} })\n      return\n    }\n\n    if (this.state.phone === '') {\n      this.setState({ errors: {phone: 'Phone is required.'} })\n      return\n    }\n\n    const updateContact = {\n      name:   this.state.name,\n      email:  this.state.email,\n      phone:  this.state.phone\n    }\n\n    const response = await axios.put(`https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`, updateContact)\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: response.data })\n\n    // Clear input form\n    this.setState({\n        name:  '',\n        email: '',\n        phone: '',\n        errors: {}\n    })\n\n    this.props.history.push('/')\n\n  }\n  render() {\n\n    return (\n      <Consumer>\n      {(value)=> {\n        return (\n          <div className='card bg-light mb-3'>\n            <div className='card-header'><h4 className=\"card-title\">Edit Contact</h4></div>\n            <div className=\"card-body\">\n              <form onSubmit={ this.onSubmit.bind(this, value.dispatch) }>\n                <TextInputGroup\n                  label=\"Name\"\n                    name=\"name\"\n                      placeholder=\"Enter name...\"\n                        value={ this.state.name }\n                          onChange={ this.onChange }\n                            error={ this.state.errors.name } />\n                <TextInputGroup\n                  label=\"Email\"\n                    name=\"email\"\n                      placeholder=\"Enter email...\"\n                        type=\"email\"\n                          value={ this.state.email }\n                            onChange={ this.onChange }\n                            error={ this.state.errors.email } />\n                <TextInputGroup\n                  label=\"Phone\"\n                    name=\"phone\"\n                      type=\"text\"\n                        placeholder=\"Enter phone...\"\n                          value={ this.state.phone }\n                            onChange={ this.onChange }\n                            error={ this.state.errors.phone } />\n                <input\n                  type=\"submit\"\n                    value='Update'\n                      className='btn btn-primary btn-lg btn-block'/>\n              </form>\n            </div>\n          </div>\n        )\n      }}\n    </Consumer>\n    )\n  }\n\n}\n\nexport default EditContact","import React from 'react'\n\nconst NotFound =(props)=> {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">That page doesn't exist.</p>\n    </div>\n  )\n}\n\nexport default NotFound","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Header from './components/layout/Header'\nimport Contacts from './components/contacts/Contacts'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport About from './components/pages/About'\nimport { Provider } from './context'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport NotFound from './components/pages/NotFound'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider basename={ process.env.PUBLIC_URL }>\n        <Router>\n          <div className=\"App\">\n            <Header branding='My Contacts'/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact\n                  path=\"/\"\n                    component={ Contacts } />\n                <Route exact\n                  path=\"/contact/add\"\n                    component={ AddContact } />\n                <Route exact\n                  path=\"/contact/edit/:id\"\n                    component={ EditContact } />\n                <Route exact\n                  path=\"/about\"\n                    component={ About } />\n                <Route component={ NotFound } />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}